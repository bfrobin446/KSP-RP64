// Converting engines and tanks to RealFuels breaks the "BlueSmurff" patches
// that BDB normally runs if Sigma Dimensions or a larger-than-stock planet
// pack is installed. These patches should scale the affected parts by the
// same scale factors that BlueSmurff generates.

//=============================================================================
// Liquid fueled engines
//=============================================================================

@PART[bluedog*,Bluedog*]:HAS[@MODULE[ModuleEngines*]:HAS[@PROPELLANT[Oxidizer]]]:BEFORE[RealFuels_StockEngines] {
    %is_BDB_liquid_engine = true
}

// Run this patch BEFORE[zzzBluedog_DB_5] to ensure that it runs no later than
// the corresponding BlueSmurff patch, even if it loads later in parse order.
@PART[bluedog*,Bluedog*]:HAS[#bdbSystemScale[>1],#is_BDB_liquid_engine[true],~bdbMassAdjusted[*]]:BEFORE[zzzBluedog_DB_5]
{
	@mass *= #$@BDBRESCALECONFIG/engineFactor$
	%bdbMassAdjusted = #$@BDBRESCALECONFIG/engineFactor$
	@MODULE[PartStatsUpgradeModule]
	{
		@UPGRADES
		{
			@UPGRADE,*
			{
				@PartStats
				{
					@mass *= #$@BDBRESCALECONFIG/engineFactor$
				}
			}
		}
	}
	
	@MODULE[ModuleB9PartSwitch],*
	{
		@SUBTYPE,*
		{
			@addedMass *= #$@BDBRESCALECONFIG/engineFactor$
		}
	}
}

//=============================================================================
// Fuel tanks
//=============================================================================

@PART[bluedog*,Bluedog*]:HAS[#bdbTankType[bdbBalloon],@RESOURCE[LiquidFuel],@RESOURCE[Oxidizer],!MODULE[ModuleEngines*],!MODULE[WBIResourceSwitcher]]:NEEDS[B9PartSwitch]:AFTER[Bluedog_DB_1]
{
	%use_bluesmurff_tank_factor = True

    %tank_volume = #$RESOURCE[LiquidFuel]/maxAmount$
	@tank_volume += #$RESOURCE[Oxidizer]/maxAmount$

	%tank_mass = #$tank_volume$
	@tank_mass *= #$@B9_TANK_TYPE[bdbBalloon]/tankMass$

	extraMass = #$mass$
	@extraMass -= #$tank_mass$
}

@PART[bluedog*,Bluedog*]:HAS[@RESOURCE[LiquidFuel],@RESOURCE[Oxidizer],!MODULE[ModuleEngines*],!MODULE[WBIResourceSwitcher]]:NEEDS[B9PartSwitch]:AFTER[Bluedog_DB_1]
{
    %use_bluesmurff_tank_factor = True

	%tank_volume = #$RESOURCE[LiquidFuel]/maxAmount$
	@tank_volume += #$RESOURCE[Oxidizer]/maxAmount$

	%tank_mass = #$tank_volume$
	@tank_mass *= #$@B9_TANK_TYPE[bdbLFOX]/tankMass$

	extraMass = #$mass$
	@extraMass -= #$tank_mass$
}

@PART[bluedog*,Bluedog*]:HAS[@RESOURCE[LqdHydrogen],@RESOURCE[Oxidizer],!MODULE[ModuleEngines*],!MODULE[WBIResourceSwitcher]]:NEEDS[B9PartSwitch]:AFTER[Bluedog_DB_1]
{
	%use_bluesmurff_tank_factor = True

    %tank_volume = #$RESOURCE[LqdHydrogen]/maxAmount$
	@tank_volume /= 5
	@tank_volume += #$RESOURCE[Oxidizer]/maxAmount$

	%tank_mass = #$tank_volume$
	@tank_mass *= #$@B9_TANK_TYPE[bdbLH2O]/tankMass$

	extraMass = #$mass$
	@extraMass -= #$tank_mass$
}

@PART[bluedog*,Bluedog*]:HAS[#bdbSystemScale[>1],#use_bluesmurff_tank_factor[*],~bdbMassAdjusted[*]]:BEFORE[zzzBluedog_DB_5]
{
	@mass -= #$extraMass$
	@mass *= #$@BDBRESCALECONFIG/tankFactor$
	@mass += #$extraMass$
	%bdbMassAdjusted = #$@BDBRESCALECONFIG/tankFactor$
	
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[fuelSwitch]]
	{
		@SUBTYPE,*
		{
			@addedMass *= #$@BDBRESCALECONFIG/tankFactor$
		}
	}

    !use_bluesmurff_tank_factor = DELETE
}
